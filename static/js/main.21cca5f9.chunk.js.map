{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.js","components/NewTodo.js","components/Filters.js","App.js","index.js"],"names":["TodoItem","_ref","todo","handleToggle","handleRemove","react_default","a","createElement","className","completed","type","id","checked","onChange","htmlFor","title","onClick","TodoList","todos","Fragment","map","components_TodoItem","key","counter","NewTodo","state","input","handleSubmit","event","preventDefault","_this","props","setState","handleChange","target","value","onSubmit","this","placeholder","React","Component","Filters","filterButton","all","active","handleClick","filter","name","Object","defineProperty","setFilter","href","App","currentFilter","allTodos","visibleTodos","setNewTodo","prevState","concat","toConsumableArray","removeTodo","removeCompleted","components_NewTodo","style","display","components_TodoList","length","components_Filters","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.21cca5f9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem({ todo, handleToggle, handleRemove }) {\n  return (\n    <li className={todo.completed ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"todo-3\"\n          checked={todo.completed}\n          onChange={() => handleToggle(todo.id)}\n        />\n        {/* eslint-disable-next-line */}\n        <label htmlFor=\"todo-3\">{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => handleRemove(todo.id)}\n        />\n      </div>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf().isRequired,\n  handleToggle: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n};\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItem from './TodoItem';\n\nfunction TodoList({ todos, handleToggle, handleRemove }) {\n  return (\n    <>\n      <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <TodoItem\n            handleToggle={handleToggle}\n            handleRemove={handleRemove}\n            todo={todo}\n            key={todo.id}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleToggle: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nlet counter = 2;\n\nclass NewTodo extends React.Component {\n  state = {\n    input: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const title = this.state.input;\n    const id = counter;\n\n    if (title) {\n      this.props.handleSubmit(id, title);\n      counter += 1;\n      this.setState({\n        input: '',\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.input}\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\" />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\nexport default NewTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filters extends React.Component {\n  state = {\n    filterButton: {\n      all: true,\n      active: false,\n      completed: false,\n    },\n  };\n\n  handleClick = (event) => {\n    const filter = event.target.name;\n\n    if (filter) {\n      this.setState({\n        filterButton: {\n          all: false,\n          active: false,\n          completed: false,\n          [filter]: true,\n        },\n      });\n\n      this.props.setFilter(filter);\n    }\n  };\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            name=\"all\"\n            className={this.state.filterButton.all ? 'selected' : ''}\n            onClick={this.handleClick}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            name=\"active\"\n            className={this.state.filterButton.active ? 'selected' : ''}\n            onClick={this.handleClick}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            name=\"completed\"\n            className={this.state.filterButton.completed ? 'selected' : ''}\n            onClick={this.handleClick}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nFilters.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n};\nexport default Filters;\n","import React from 'react';\n\nimport TodoList from './components/TodoList';\nimport NewTodo from './components/NewTodo';\nimport Filters from './components/Filters';\n\nclass App extends React.Component {\n  state = {\n    currentFilter: 'all',\n    allTodos: [{\n      id: 1,\n      title: 'Hello',\n      completed: false,\n    }],\n    visibleTodos: [],\n  }\n\n  componentDidMount() {\n    this.setState(prevState => ({\n      visibleTodos: [...prevState.allTodos],\n    }));\n  }\n\n  setNewTodo = (id, title) => {\n    this.setState(prevState => ({\n      allTodos: [...prevState.allTodos, {\n        id,\n        title,\n        completed: false,\n      }],\n    }));\n    this.setFilter(this.state.currentFilter);\n  }\n\n  setFilter = (filter) => {\n    this.setState({\n      currentFilter: filter,\n    });\n    switch (filter) {\n      case 'all':\n        this.setState(prevState => ({\n          visibleTodos: prevState.allTodos,\n        }));\n        break;\n      case 'active':\n        this.setState(prevState => ({\n          visibleTodos: prevState.allTodos.filter(todo => (\n            !todo.completed\n          )),\n        }));\n        break;\n      case 'completed':\n        this.setState(prevState => ({\n          visibleTodos: prevState.allTodos.filter(todo => (\n            todo.completed\n          )),\n        }));\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleToggle = (id) => {\n    this.setState((prevState) => {\n      prevState.allTodos.map((todo) => {\n        if (todo.id === id) {\n          // eslint-disable-next-line no-param-reassign\n          todo.completed = !todo.completed;\n        }\n\n        return 0;\n      });\n    });\n    this.setFilter(this.state.currentFilter);\n  }\n\n  removeTodo = (id) => {\n    this.setState(prevState => ({\n      allTodos: prevState.allTodos.filter(todo => id !== todo.id),\n    }));\n    this.setFilter(this.state.currentFilter);\n  }\n\n  removeCompleted = (id) => {\n    this.setState(prevState => ({\n      allTodos: prevState.allTodos.filter(todo => !todo.completed),\n    }));\n    this.setFilter(this.state.currentFilter);\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <NewTodo handleSubmit={this.setNewTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <TodoList\n            todos={this.state.visibleTodos}\n            handleToggle={this.handleToggle}\n            handleRemove={this.removeTodo}\n          />\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {this.state.allTodos.filter(todo => (\n              todo.completed === false\n            )).length}\n            {' '}\n            items left\n          </span>\n\n          <Filters setFilter={this.setFilter} />\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n            onClick={this.removeCompleted}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}